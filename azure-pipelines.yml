trigger:
- main

variables:
  python.version: '3.10'
  node.version: '16.14.2'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: 'Build'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(node.version)
      displayName: 'Install Node.js'

    - script: |
        cd search
        npm install
        npm run build
        cd ..
      displayName: 'npm install and build'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)
      displayName: 'Set up Python Environment'

    - script: python -m pip install --upgrade pip && pip install -r requirements.txt
      displayName: 'Install dependencies'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.Repository.LocalPath)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true 

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    # environment: 'your-environment-name'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '60f21cf0-6e4b-4e37-a27e-f420fb899b12'
              appType: 'webAppLinux'
              WebAppName: 'GithubMeta'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
